A - Pay to Win
	https://atcoder.jp/contests/agc044/tasks/agc044_a
	0を持っている、これをNに変えようとしている
		A枚のコインを支払い、持っている数を2倍にする
		B枚のコインを支払い、持っている数を3倍にする
		C枚のコインを支払い、持っている数を5倍にする
		D枚のコインを支払い、持っている数を1増やす、または1減らす
	持っている数をNとするには最小で何枚のコインが必要か？
		T個のテストケースに答えよ
		nを持っていてこれを0にするで行けるだろう
			減らす分には速く行ける
		2の場合は余り分は簡単だろう
			nが奇数の時
				n/2でfloor(n/2)=n2となる
				これはn2*2+1と同じである
				もしくは(n+1)/2に遷移する事も考えられる
			n%3の時
			例えば11の時に/3すると
				3になる、これは3*3+2と同じ
				3-n%3まで処理する
			5の時も同じように処理出来そうである
				
B - Joker		
	https://atcoder.jp/contests/agc044/tasks/agc044_b
	n*n列
	最前列の観客に1,2,...,Nの番号を
	前から2列目の観客sから左にn+1,....,2nの番号を付け
	最後はn^2-n+1,...,n^2
	観客は決まった順に劇場を出る
		i番目に劇場を出るのは番号piの観客
			番号pi+1の観客はpiの観客が劇場を出るまでまってから移動
	番号xの観客が劇場を出る際に番号yの別の観客がまだ座っている席を通り抜けると
	番号xの観客は番号yの観客に永遠に嫌われる
	各観客は自分を永遠に嫌う観客の数が最小となるように移動方法を選ぶ
	番号xの観客が番号yの観客に永遠に嫌われるような組(x,y)の個数を求めよ
		普通の映画館とは違い4方向どちらからでも出られる
			各pの処理前状態はどのパターンでも同じ
				つまりあるpが外に出るために最低何人の上を通過する必要があるか
					という問題に言い換えられる
	グリッドグラフにも見える
		全てのpに対して最短距離をやろうとすると
			n^2*nlognとなる
		ダイクストラがnlognである
			しかもn^2だから更にひどくなる
		高速に計算できる必要がある
			初期状態は最短距離を求める必要もなく
				各(x,y)の最短はmin(x-1,y-1)
			番号に鍵がありそう
				あるpiが外に出る時
					上下左右どこから出るかにたいして、考えられればよい
						上に行って下に行くということはない
							ある、通路がぐるりと空いている時を考えるとそうなる
				番号がカギになっている気はする
					移動できるのは自分の番号から-1,+1,-n,+nである
						一つ消えた時、自分の周りの4方向に対して、更新可能である
							p=500*500で4方向に絞ると2nである
								ついでに減らしたとき旨味がない場合、そこから先は処理する必要がない
									4方向ではだめ
										空になっているところもみないといけないし、蛇行しているところは直線で更新できない
									しかもそれぞれの方向へ行くときの最短距離は計算が出来ない
				まず、周りの2000個は処理する必要がない
					次にその一つ中の観客は、外の観客が先に出ていれば0、あとから出るなら保留
						全く別方向からくる可能性もある
							順番の前後で考える方向性
								ある場所に関して、2,2の場所は

											

								


				



